file "Gemfile", %{
clear_sources
disable_system_gems

bundle_path "gems"

source 'http://gemcutter.org'
source 'http://gems.github.com'

gem 'rails', '2.3.4'
gem 'will_paginate'
gem 'formtastic'
gem 'inherited_resources'

only :test, :cucumber do
  gem 'rspec'
  gem 'rspec-rails'
  gem 'cucumber'
  gem 'webrat'
  gem 'fakeweb'
end

only :test, :cucumber, :development do
  gem 'notahat-machinist'
  gem 'faker'
  gem 'ruby-debug'
end

only :production do
  gem 'rack-cache', :require_as => 'rack/cache'
end  
}

file "config/preinitializer.rb", %{
require File.expand_path(File.join(File.dirname(__FILE__), "..", "gems", "environment"))  
}.strip

environment "Bundler.require_env RAILS_ENV"

run 'gem bundle'

plugin 'penknife-for-rails', :git => 'git://github.com/tomafro/penknife-for-rails.git'

generate 'rspec'
generate 'cucumber'
generate 'pickle'

file "spec/spec.opts", %{
--colour
--format nested
}.strip
 
file 'spec/blueprints.rb', %{
require 'machinist/active_record'
require File.expand_path(File.dirname(__FILE__) + "/blueprints/shams")

Dir[File.expand_path(File.dirname(__FILE__)) + "/blueprints/*_blueprint.rb"].each do |blueprint|
 require blueprint
end
}.strip

file 'spec/blueprints/shams.rb', %{
require 'faker'

Sham.email { Faker::Internet.email }
Sham.domain_name { Faker::Internet.domain_name }
}.strip
 
gsub_file "spec/spec_helper.rb", "Spec::Runner.configure do |config|", "require File.expand_path(File.dirname(__FILE__) + '/blueprints.rb')\n\nSpec::Runner.configure do |config|"

#!/usr/bin/env ruby

file 'script/cucumber', %{
#!/usr/bin/env ruby
cucumber_binary = Dir[File.join(File.dirname(__FILE__), '..', 'gems', 'gems', 'cucumber*', 'bin', 'cucumber')].first
load File.expand_path(cucumber_binary)
}.strip

file 'lib/tasks/cucumber.rake', %{
# This file has been generated by Tom Ward's rails template, to take into account the bundled cucumber
# Last tested on cucumber 0.4.2
cucumber_path = Dir[File.join(RAILS_ROOT, 'gems', 'gems', 'cucumber*')].first

$LOAD_PATH.unshift(File.join(cucumber_path, "lib")

unless ARGV.any? {|a| a =~ /^gems/}

begin
  require 'cucumber/rake/task'

  # Use vendored cucumber binary if possible. If it's not vendored,
  # Cucumber::Rake::Task will automatically use installed gem's cucumber binary
  vendored_cucumber_binary = File.join(cucumber_path, 'bin', 'cucumber')

  namespace :cucumber do
    Cucumber::Rake::Task.new({:ok => 'db:test:prepare'}, 'Run features that should pass') do |t|
      t.binary = vendored_cucumber_binary
      t.fork = true # You may get faster startup if you set this to false
      t.cucumber_opts = "--color --tags ~@wip --strict --format #{ENV['CUCUMBER_FORMAT'] || 'pretty'}"
    end

    Cucumber::Rake::Task.new({:wip => 'db:test:prepare'}, 'Run features that are being worked on') do |t|
      t.binary = vendored_cucumber_binary
      t.fork = true # You may get faster startup if you set this to false
      t.cucumber_opts = "--color --tags @wip:2 --wip --format #{ENV['CUCUMBER_FORMAT'] || 'pretty'}"
    end

    desc 'Run all features'
    task :all => [:ok, :wip]
  end
  desc 'Alias for cucumber:ok'
  task :cucumber => 'cucumber:ok'

  task :default => :cucumber

  task :features => :cucumber do
    STDERR.puts "*** The 'features' task is deprecated. See rake -T cucumber ***"
  end
rescue LoadError
  desc 'cucumber rake task not available (cucumber not installed)'
  task :cucumber do
    abort 'Cucumber rake task is not available. Be sure to install cucumber as a gem or plugin'
  end
end

end
}.strip

gsub_file "features/support/env.rb", "require 'cucumber/rails/world'", "require File.expand_path(File.dirname(__FILE__) + '/../../spec/blueprints')\nrequire 'cucumber/rails/world'"

# remove prototype and scriptaculous, in favour of jquery

run "rm -f public/javascripts/*"
run "curl http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js > public/javascripts/jquery.1.3.2.min.js"
run "curl http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/jquery-ui.min.js > public/javascripts/jquery-ui.1.7.2.min.js"

# Remove unwanted files
# 
run "rm README"
run "rm doc/README_FOR_APP"
run "rm public/index.html"
run "rm public/favicon.ico"
run "rm -rf test"

run "rm -rf vendor/plugins/*/test"
run "rm -rf vendor/plugins/*/spec"

# Make git ignore things we don't like

file '.gitignore', %{
.DS_Store
coverage/*
log/*.log
db/*.db
db/*.sqlite3
tmp/**/*
doc/api
doc/app
config/database.yml
gems/doc
gems/gems
gems/specifications
gems/environment.rb
}.strip
 
run "rm log/*"

run 'find . \( -type d -empty \) -and \( -not -regex ./\.git.* \) -exec touch {}/.gitignore \;'

git :init
git :add => "."
git :commit => %{-a -m "Initial commit after generation from 'http://github.com/tomafro/dotfiles/tree/master/resource/template.rb"}